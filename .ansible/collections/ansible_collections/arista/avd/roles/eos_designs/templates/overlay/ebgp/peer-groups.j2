  peer_groups:
    {{ switch.bgp_peer_groups.evpn_overlay_peers.name }}:
      type: evpn
      update_source: Loopback0
      bfd: true
      ebgp_multihop: "{{ evpn_ebgp_multihop }}"
{% if switch.bgp_peer_groups.evpn_overlay_peers.password is arista.avd.defined %}
      password: "{{ switch.bgp_peer_groups.evpn_overlay_peers.password }}"
{% endif %}
      send_community: all
      maximum_routes: 0
{##### bgp listen range prefix 추가 #####}
{% if switch.bgp_peer_groups.evpn_overlay_peers.bgp_listen_range_prefix is arista.avd.defined %}
      bgp_listen_range_prefix: "{{ switch.bgp_peer_groups.evpn_overlay_peers.bgp_listen_range_prefix }}"
{% endif %}
{##### peer filter 추가 #####}
{% if switch.bgp_peer_groups.evpn_overlay_peers.peer_filter is arista.avd.defined %}
      peer_filter: "{{ switch.bgp_peer_groups.evpn_overlay_peers.peer_filter }}"
{% endif %}  
{##### remote as 추가 #####}
{% if switch.bgp_peer_groups.evpn_overlay_peers.remote_as is arista.avd.defined %}
      remote_as: "{{ switch.bgp_peer_groups.evpn_overlay_peers.remote_as }}"
{% endif %}
{% if switch.evpn_role == "server" %}
      next_hop_unchanged: true
{% endif %}
{% if switch.evpn_gateway_vxlan_l2 is arista.avd.defined(true) or switch.evpn_gateway_vxlan_l3 is arista.avd.defined(true) %}
    {{ switch.bgp_peer_groups.evpn_overlay_core.name }}:
      type: evpn
      update_source: Loopback0
      bfd: true
      ebgp_multihop: "{{ evpn_ebgp_gateway_multihop }}"
{%     if switch.bgp_peer_groups.evpn_overlay_core.password is arista.avd.defined() %}
      password: "{{ switch.bgp_peer_groups.evpn_overlay_core.password }}"
{%     endif %}
      send_community: all
      maximum_routes: 0
{% endif %}
